version: '3'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ttarang_network

  ai:
    build:
      context: ./ai
    container_name: ai
    restart: always
    env_file:
      - ./ai/.env
    expose:
      - "8000"
    networks:
      - ttarang_network

  backend:
    build:
      context: ./backend
    container_name: backend
    restart: always
    depends_on:
      - postgres
      - ai
    expose:
      - "8080"
    volumes:
      - ./secrets/application-secret.properties:/app/secrets/application-secret.properties:ro
    command: >
      java -jar app.jar
      --spring.config.location=file:/app/secrets/application-secret.properties
    networks:
      - ttarang_network


  frontend:
    build:
      context: ./frontend
    container_name: frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "3000:80"
    networks:
      - ttarang_network

  nginx:
    image: nginx:1.26.3
    container_name: nginx
    restart: always
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    networks:
      - ttarang_network

volumes:
  postgres_data:
    external: true

networks:
  ttarang_network:
    driver: bridge
