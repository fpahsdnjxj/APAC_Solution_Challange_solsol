version: '3'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ttarang_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ttarang_network

  backend:
    build:
      context: ./ai
    container_name: backend
    restart: always
    depends_on:
      - postgres
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ttarang_db
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - PYTHONPATH=/app
    ports:
      - "8000:8000"
    networks:
      - ttarang_network

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "3000:80"
    networks:
      - ttarang_network

  nginx:
    image: nginx:1.26.3
    container_name: nginx
    restart: always
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    networks:
      - ttarang_network

volumes:
  postgres_data:
    external: true

networks:
  ttarang_network:
    driver: bridge
